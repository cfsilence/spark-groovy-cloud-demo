group 'codes.recursive'
version '1.0-SNAPSHOT'

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'Bootstrap'
sourceSets.main.resources.srcDirs = [ "src/main/groovy" ]
sourceSets.main.resources.includes = [ "**/conf/**" ]

configurations {
    localGroovyConf
}

repositories {
    mavenCentral()
}
dependencies {
    localGroovyConf localGroovy()
    compile 'org.codehaus.groovy:groovy-all:2.5.0-beta-2'
    compile 'com.sparkjava:spark-core:2.6.0'
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'org.yaml:snakeyaml:1.17'
}

task runServer(dependsOn: 'classes', type: JavaExec) {
	System.setProperty('environment', 'prod')
	System.setProperty('confDir', 'src/main/groovy/conf')
	dependsOn 'classes'
    classpath = sourceSets.main.runtimeClasspath
    main = "$mainClassName"
    systemProperties = System.getProperties()
}

task runDev(type: JavaExec) {
	System.setProperty('environment', 'dev')
    System.setProperty('confDir', 'src/main/groovy/conf')
    dependsOn 'classes'
    classpath = sourceSets.main.runtimeClasspath
	main = "$mainClassName"
    systemProperties = System.getProperties()
}

task runQa(type: JavaExec) {
	System.setProperty('environment', 'qa')
    System.setProperty('confDir', 'src/main/groovy/conf')
    dependsOn 'classes'
    classpath = sourceSets.main.runtimeClasspath
	main = "$mainClassName"
    systemProperties = System.getProperties()
}

task packageOracle(type: Zip) {
    dependsOn jar
    from configurations.runtime.allArtifacts.files
    from 'manifest.json'
}

run {
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}
// Create a fat executable jar
jar {
    dependsOn configurations.runtime

    manifest {
        attributes "Main-Class": "$mainClassName"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    archiveName "app.jar"
}

